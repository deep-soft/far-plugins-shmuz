.Language=Russian,Russian (Русский)
.PluginContents=Polygon
.Options CtrlColorChar=\

@Contents
$^ #Polygon - Содержание справки#
 #Polygon# - Плагин для Far Manager, предназначен для просмотра
           и редактирования баз данных SQLite.

 Плагин сделан на основе плагина SQLiteDB Артёма Сеничева.

 ~Справка по действиям ключей в панели плагина~@Keyboard@ 
 ~Диалог настройки вида панели~@PanelView@
 ~Вызов плагина~@Invoke@
 ~Диалог конфигурации~@ConfigDialog@
 ~Пользовательские модули~@UserModules@

@Invoke
$^ #Вызов плагина#
 Вызов плагина можно осуществить следующими способами:

   1. Из меню плагинов. Плагин откроет файл под курсором.

   2. Нажатием Enter на файле в панелях.

   3. Из командной строки: #polygon: <filename>#
      - Если файл <filename> не существует, он будет создан.
      - Если имя файла не указано, то база данных будет создана в памяти.

   4. Из ~Ссылок на папки~@:FolderShortcuts@.

 ~Содержание~@Contents@

@Keyboard
$^ #Справка по действиям ключей в панели плагина#
   Режим показа     │ Ключ        │ Действие
   ─────────────────┼─────────────┼───────────────────────────────────────────────────
   Любой            │ F6          │ Редактирование "запроса SQLite" в Редакторе
                    │ LCtrl-1     │ Двухпанельный режим просмотра
                    │ LCtrl-2     │ Однопанельный режим просмотра
                    │             │
   База данных      │ F3          │ Просмотр содержимого таблицы под курсором
                    │ F4          │ Просмотр запроса на создание таблицы под курсором
                    │ Shift-F4    │ Просмотр прагм SQLite для базы данных
                    │ F5          │ Диалог экспорта данных для таблицы под курсором
                    │ F8          │ Диалог удаления выделенных элементов базы данных
                    │             │
   Таблица          │ F4, Enter   │ Диалог редактирования записи под курсором
                    │ Shift-F4    │ Диалог вставки новой записи в таблицу
                    │ F8          │ Диалог удаления выделенных записей
                    │             │
   Таблица или View │ Shift-F3    │ Диалог настройки вида панели
                    │ Shift-F5    │ Переключение вида панели: полный/настроенный
   ─────────────────┴─────────────┴───────────────────────────────────────────────────

   Если командная строка не пуста, то по нажатию Enter будет исполнен
   "запрос SQLite" с командной строки.

 ~Содержание~@Contents@

@PanelView
$^ #Диалог настройки вида панели#
   Данный диалог позволяет выбрать колонки для отображения и настроить их ширину.
Ширина колонок задаётся как в диалоге режима просмотра панелей
~Far Manager~@:PanelViewModes@.

   Если диалог был закрыт кнопкой OK, то панели перестроятся в соответствии
с установками диалога. Эти установки будут также сохранены на постоянной основе
в локальной базе данных плагина.

   Нажатие Shift-F5 в панели плагина переключает режим просмотра между "полным"
и "настроенным".

 ~Содержание~@Contents@

@ConfigDialog
$^ #Диалог конфигурации
 Следующие установки относятся к общей конфигурации плагина.
 
 #[ ] Добавить в меню плагинов#           Добавить пункт в меню плагинов
 #Префикс:#                               Префикс командной строки плагина

 Следующие установки применяются при создании нового подключения к базе данных.
Изменения этих установок не влияют на уже открытые панели плагина.

 #[ ] Загружать модули пользователя#      Загружать модули пользователя
 #[ ] Разрешить расширения#               Исполнять #sqlite3_enable_load_extension(db,1)#
 #[ ] Учитывать внешние ключи#            Исполнять #PRAGMA foreign_keys = ON#

 ~Содержание~@Contents@

@UserModules
$^ #Пользовательские модули
 Пользовательский модуль - это скрипт на языке программирования Lua,
помещённый в Lua-таблицу и отвечающий определённым требованиям:

 1. Модули загружаются из файлов #*.lua#, находящихся в папке
#%FARPROFILE%\PluginsData\Polygon# или её подпапках.

 2. Модули загружаются сразу после установки успешного соединения плагина
с базой данных.

 3. Модуль может содержать все или некоторые из следующих полей-функций,
вызываемых плагином в различных ситуациях:
#OnOpenConnection#, #ProcessPanelEvent#, #ProcessPanelInput# и #ClosePanel#.

 4. Модуль может содержать поле #Priority# (число от 0 до 100).
Если поле не указано, применяется значение по умолчанию 50.
Функции модулей с большим приоритетом вызываются раньше.

 5. Для загрузки модулей нужно использовать функцию #UserModule#.


 Пример структуры кода пользовательского модуля:

   #local mod = { Priority=60 }#
   #mod.OnOpenConnection  = function() ... end#
   #mod.ProcessPanelEvent = function() ... end#
   #mod.ProcessPanelInput = function() ... end#
   #mod.ClosePanel        = function() ... end#
   #UserModule(mod)#


 ~Содержание~@Contents@
